// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// SQL Practice Database Tables
model Department {
  id        Int   @id @default(autoincrement())
  name      String
  managerId Int?
  employees Employee[]
}

model Employee {
  id           Int      @id @default(autoincrement())
  name         String
  departmentId Int?
  salary       Decimal? @db.Decimal(10, 2)
  hireDate     DateTime? @map("hire_date")
  department   Department? @relation(fields: [departmentId], references: [id])
  projects     EmployeeProject[]
}

model Project {
  id        Int      @id @default(autoincrement())
  name      String
  budget    Decimal? @db.Decimal(10, 2)
  startDate DateTime? @map("start_date")
  endDate   DateTime? @map("end_date")
  employees EmployeeProject[]
}

model EmployeeProject {
  employeeId Int
  projectId  Int
  role       String?
  employee   Employee @relation(fields: [employeeId], references: [id])
  project    Project  @relation(fields: [projectId], references: [id])

  @@id([employeeId, projectId])
  @@map("employee_projects")
}

model Log {
  id Int @id @default(autoincrement())
  num Int
}

model Weather {
  id           Int      @id @default(autoincrement())
  recordDate   DateTime @map("record_date")
  temperature  Int
}

model Activity {
  userId       Int      @map("user_id")
  sessionId    Int      @map("session_id")
  activityDate DateTime @map("activity_date")
  activityType String   @map("activity_type")

  @@id([userId, sessionId, activityDate])
}
