"use strict";(()=>{var e={};e.id=597,e.ids=[597],e.modules={3524:e=>{e.exports=require("@prisma/client")},2934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},4580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},5869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},7790:e=>{e.exports=require("assert")},8893:e=>{e.exports=require("buffer")},4770:e=>{e.exports=require("crypto")},7702:e=>{e.exports=require("events")},2615:e=>{e.exports=require("http")},8791:e=>{e.exports=require("https")},6624:e=>{e.exports=require("querystring")},7360:e=>{e.exports=require("url")},1764:e=>{e.exports=require("util")},1568:e=>{e.exports=require("zlib")},6005:e=>{e.exports=require("node:crypto")},678:(e,t,a)=>{a.r(t),a.d(t,{originalPathname:()=>f,patchFetch:()=>w,requestAsyncStorage:()=>m,routeModule:()=>p,serverHooks:()=>h,staticGenerationAsyncStorage:()=>y});var r={};a.r(r),a.d(r,{POST:()=>u,runtime:()=>d});var s=a(9303),i=a(8716),n=a(670),o=a(7070),l=a(3364),c=a(6189);let d="nodejs";async function u(e){if(!await (0,l.getAuthUser)(e))return o.NextResponse.json({error:"Authentication required"},{status:401});try{let{query:t,expectedQuery:a}=await e.json(),r=(0,c.getDbPool)();if(!r)return o.NextResponse.json({error:"SQLite database not initialized."},{status:500});if(!t||"string"!=typeof t)return o.NextResponse.json({error:"Query is required"},{status:400});let s=t.trim(),i=s.toLowerCase(),n=[/^select\b/,/^with\b/,/^explain\b/,/^show\b/,/^(desc|describe)\b/,/^insert\b/,/^update\b/,/^delete\b/,/^create\s+(view|index|table|temporary\s+table)\b/,/^alter\s+table\b/,/^drop\s+(view|index)\b/];if(!n.some(e=>e.test(i)))return o.NextResponse.json({error:"Query type not allowed",message:"Allowed: SELECT, WITH (CTE), EXPLAIN, SHOW, DESCRIBE/DESC, INSERT, UPDATE, DELETE, CREATE (VIEW/INDEX/TABLE), ALTER TABLE, DROP (VIEW/INDEX)"},{status:400});let[l]=await r.execute(s),d=null;if(a&&"string"==typeof a)try{let e=a.trim();if(n.some(t=>t.test(e.toLowerCase()))){let[t]=await r.execute(e);d=function(e,t){let a={matches:!0,differences:[]},r=e=>e&&e[0]?Object.keys(e[0]):[],s=r(e),i=r(t);s.length===i.length&&s.every(e=>i.includes(e))||(a.matches=!1,a.differences.push(`Column mismatch: got [${s.join(", ")}], expected [${i.join(", ")}]`)),(e?.length||0)!==(t?.length||0)&&(a.matches=!1,a.differences.push(`Row count differs: got ${(e||[]).length}, expected ${(t||[]).length}`));let n=(e,t)=>(e||[]).map(e=>JSON.stringify(t.reduce((t,a)=>(t[a]=e[a],t),{}))).sort(),o=n(e,i.length?i:s),l=n(t,i.length?i:s);return(o.length!==l.length||o.some((e,t)=>e!==l[t]))&&(a.matches=!1,a.differences.push("Row set differs from expected.")),a}(l,t)}}catch(e){d=null}return o.NextResponse.json({success:!0,results:l,rowCount:l.length,comparison:d})}catch(e){return o.NextResponse.json({error:"Query execution failed",message:e.message},{status:500})}}let p=new s.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/execute-query/route",pathname:"/api/execute-query",filename:"route",bundlePath:"app/api/execute-query/route"},resolvedPagePath:"/Users/devang/Desktop/sql_tutor/app/api/execute-query/route.js",nextConfigOutput:"",userland:r}),{requestAsyncStorage:m,staticGenerationAsyncStorage:y,serverHooks:h}=p,f="/api/execute-query/route";function w(){return(0,n.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:y})}},3364:(e,t,a)=>{let{verify:r}=a(1279),{getUserById:s}=a(6939),{getServerSession:i}=a(5571),{authOptions:n}=a(2606);async function o(e){try{let e=await i(n);if(e?.user?.id){let t=await s(e.user.id);if(t)return t}}catch(e){}let t=e.headers.get("cookie")||"",a=t.split(";").map(e=>e.trim()).find(e=>e.startsWith("auth_token="))?.split("=")[1];if(!a)return null;let o=r(a,process.env.SESSION_SECRET||"sql-mastery-quest-secret");return o?.sub&&await s(o.sub)||null}e.exports={getAuthUser:o}},6610:(e,t,a)=>{let{PrismaClient:r}=a(3524);class s{constructor(){this.initialized=!1,this.prisma=new r,console.log("\uD83D\uDDC4️  Initializing Prisma Postgres database...")}async initialize(){try{if(this.initialized)return;await this.createTables(),await this.insertSampleData(),this.initialized=!0,console.log("✅ Prisma Postgres database initialized with sample data")}catch(e){throw console.error("❌ Prisma Postgres database initialization failed:",e),e}}async createTables(){try{await this.prisma.$connect(),console.log("✅ Connected to Prisma database")}catch(e){throw console.error("❌ Failed to connect to Prisma database:",e),e}}async insertSampleData(){try{if(await this.prisma.department.count()>0){console.log("Sample data already exists, skipping insertion");return}for(let e of[{id:1,name:"Engineering",managerId:1},{id:2,name:"Marketing",managerId:2},{id:3,name:"Sales",managerId:3},{id:4,name:"HR",managerId:4}])await this.prisma.department.upsert({where:{id:e.id},update:e,create:e});for(let e of[{id:1,name:"John Doe",departmentId:1,salary:75e3,hireDate:new Date("2020-01-15")},{id:2,name:"Jane Smith",departmentId:2,salary:65e3,hireDate:new Date("2019-03-22")},{id:3,name:"Mike Johnson",departmentId:1,salary:8e4,hireDate:new Date("2021-06-10")},{id:4,name:"Sarah Wilson",departmentId:3,salary:55e3,hireDate:new Date("2022-02-01")},{id:5,name:"David Brown",departmentId:1,salary:7e4,hireDate:new Date("2020-09-15")},{id:6,name:"Lisa Davis",departmentId:2,salary:6e4,hireDate:new Date("2021-11-30")},{id:7,name:"Tom Anderson",departmentId:4,salary:5e4,hireDate:new Date("2023-01-20")},{id:8,name:"Emily White",departmentId:3,salary:58e3,hireDate:new Date("2022-08-15")}])await this.prisma.employee.upsert({where:{id:e.id},update:e,create:e});for(let e of[{id:1,name:"Website Redesign",budget:1e5,startDate:new Date("2023-01-01"),endDate:new Date("2023-06-30")},{id:2,name:"Mobile App",budget:15e4,startDate:new Date("2023-03-15"),endDate:new Date("2023-12-31")},{id:3,name:"Database Migration",budget:8e4,startDate:new Date("2023-02-01"),endDate:new Date("2023-08-31")}])await this.prisma.project.upsert({where:{id:e.id},update:e,create:e});for(let e of[{employeeId:1,projectId:1,role:"Lead Developer"},{employeeId:3,projectId:1,role:"Frontend Developer"},{employeeId:5,projectId:2,role:"Backend Developer"},{employeeId:1,projectId:3,role:"Database Architect"},{employeeId:2,projectId:1,role:"UI/UX Designer"}])await this.prisma.employeeProject.upsert({where:{employeeId_projectId:{employeeId:e.employeeId,projectId:e.projectId}},update:e,create:e});for(let e of[{id:1,num:1},{id:2,num:1},{id:3,num:1},{id:4,num:2},{id:5,num:1},{id:6,num:2},{id:7,num:2}])await this.prisma.log.upsert({where:{id:e.id},update:e,create:e});for(let e of[{id:1,recordDate:new Date("2015-01-01"),temperature:10},{id:2,recordDate:new Date("2015-01-02"),temperature:25},{id:3,recordDate:new Date("2015-01-03"),temperature:20},{id:4,recordDate:new Date("2015-01-04"),temperature:30}])await this.prisma.weather.upsert({where:{id:e.id},update:e,create:e});for(let e of[{userId:1,sessionId:1,activityDate:new Date("2019-07-20"),activityType:"open_session"},{userId:1,sessionId:1,activityDate:new Date("2019-07-20"),activityType:"scroll_down"},{userId:1,sessionId:1,activityDate:new Date("2019-07-20"),activityType:"end_session"},{userId:1,sessionId:2,activityDate:new Date("2019-07-21"),activityType:"open_session"},{userId:1,sessionId:2,activityDate:new Date("2019-07-21"),activityType:"send_message"},{userId:1,sessionId:2,activityDate:new Date("2019-07-21"),activityType:"end_session"},{userId:2,sessionId:4,activityDate:new Date("2019-07-21"),activityType:"open_session"},{userId:2,sessionId:4,activityDate:new Date("2019-07-21"),activityType:"send_message"},{userId:2,sessionId:4,activityDate:new Date("2019-07-21"),activityType:"end_session"},{userId:3,sessionId:5,activityDate:new Date("2019-07-22"),activityType:"open_session"},{userId:3,sessionId:5,activityDate:new Date("2019-07-22"),activityType:"send_message"},{userId:3,sessionId:5,activityDate:new Date("2019-07-22"),activityType:"end_session"}])await this.prisma.activity.upsert({where:{userId_sessionId_activityDate:{userId:e.userId,sessionId:e.sessionId,activityDate:e.activityDate}},update:e,create:e});console.log("✅ Sample data inserted successfully")}catch(e){throw console.error("❌ Failed to insert sample data:",e),e}}async executeQuery(e,t=[]){try{await this.initialize();let a=e.toLowerCase().trim();if(a.includes("select 1")||a.includes("select 1 as test"))return[[{test:1}]];if(a.startsWith("show tables"))return[await this.prisma.$queryRaw`
                    SELECT table_name as "Tables_in_sqlite_db"
                    FROM information_schema.tables 
                    WHERE table_schema = 'public'
                `];if(a.startsWith("describe")||a.startsWith("desc ")){let e=a.match(/describe\s+(\w+)|desc\s+(\w+)/i);if(e){let t=e[1]||e[2];return[await this.getTableSchema(t)]}return[[]]}let r=e;if(t&&t.length>0&&t.forEach((e,t)=>{let a=`$${t+1}`;r=r.replace("?",a)}),a.startsWith("select"))return[(t&&t.length>0?await this.prisma.$queryRawUnsafe(r,...t):await this.prisma.$queryRawUnsafe(r)).map(e=>{let t={};for(let[a,r]of Object.entries(e))"bigint"==typeof r?t[a]=Number(r):t[a]=r;return t})];if(t&&t.length>0)return[{affectedRows:await this.prisma.$executeRawUnsafe(r,...t)||0,insertId:null}];return[{affectedRows:await this.prisma.$executeRawUnsafe(r)||0,insertId:null}]}catch(e){throw Error(`Prisma Postgres Error: ${e.message}`)}}async getTableSchema(e){try{return await this.prisma.$queryRaw`
                SELECT 
                    column_name as "Field",
                    data_type as "Type",
                    is_nullable as "Null",
                    CASE 
                        WHEN constraint_name LIKE '%_pkey' THEN 'PRI'
                        ELSE ''
                    END as "Key",
                    column_default as "Default",
                    '' as "Extra"
                FROM information_schema.columns 
                WHERE table_name = ${e}
                AND table_schema = 'public'
                ORDER BY ordinal_position
            `}catch(e){return console.error("Error getting table schema:",e),[]}}createPool(){return{execute:async(e,t=[])=>this.executeQuery(e,t),getConnection:async()=>({ping:async()=>Promise.resolve(),release:()=>Promise.resolve(),execute:async(e,t=[])=>this.executeQuery(e,t)})}}async disconnect(){await this.prisma.$disconnect()}}let i=new s;e.exports={createPool:e=>i.createPool(e),createConnection:e=>i.createPool(e),disconnect:()=>i.disconnect()}},1279:(e,t,a)=>{let r=a(4770);function s(e){return Buffer.from(e).toString("base64").replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}function i(e,t){return s(r.createHmac("sha256",t).update(e).digest())}e.exports={encode:function(e,t,a=2592e3){let r=Math.floor(Date.now()/1e3),n={iat:r,exp:r+a,...e},o=s(JSON.stringify({alg:"HS256",typ:"JWT"})),l=s(JSON.stringify(n)),c=`${o}.${l}`,d=i(c,t);return`${c}.${d}`},verify:function(e,t){try{let a=e.split(".");if(3!==a.length)return null;let[r,s,n]=a,o=i(`${r}.${s}`,t);if(n!==o)return null;let l=JSON.parse(Buffer.from(s,"base64").toString("utf8"));if(l.exp&&Math.floor(Date.now()/1e3)>l.exp)return null;return l}catch{return null}},decode:function(e){try{let[,t]=e.split(".");return JSON.parse(Buffer.from(t,"base64").toString("utf8"))}catch{return null}},cookieOptions:function({maxAge:e=2592e3}={}){return["Path=/","HttpOnly","SameSite=Lax","Secure",`Max-Age=${e}`].filter(Boolean).join("; ")}}},6189:(e,t,a)=>{let r=null;e.exports={getDbPool:function(){return r||(r=a(6610).createPool())}}}};var t=require("../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),r=t.X(0,[276,972,649,923,606],()=>a(678));module.exports=r})();