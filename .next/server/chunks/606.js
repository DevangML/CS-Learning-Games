"use strict";exports.id=606,exports.ids=[606],exports.modules={2606:(e,t,r)=>{r.r(t),r.d(t,{authOptions:()=>s});var a=r(7234),n=r(6939);let s={providers:[(0,a.Z)({clientId:process.env.GOOGLE_CLIENT_ID||"",clientSecret:process.env.GOOGLE_CLIENT_SECRET||""})],session:{strategy:"jwt"},callbacks:{async signIn({user:e,account:t,profile:r}){try{let a=t?.providerAccountId||r?.sub||r?.id;if(!a)return!1;let s=await (0,n.getUserById)(a);return s||(s=await (0,n.createUser)({google_id:a,name:e.name||r?.name||"User",email:e.email||r?.email||"",avatar:e.image||r?.picture||""})),await (0,n.updateUserLogin)(a),!0}catch(e){return!1}},jwt:async({token:e,account:t,profile:r})=>(t&&r&&(e.sub=t.providerAccountId||r.sub||r.id||e.sub),e),session:async({session:e,token:t})=>(t?.sub&&(e.user.id=t.sub),e),async redirect({url:e,baseUrl:t}){try{if(!new URL(e,t).pathname.startsWith("/api/auth"))return e}catch{}let r=new URL(t);return r.searchParams.set("welcome","1"),r.toString()}},pages:{},secret:process.env.NEXTAUTH_SECRET}},6939:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0});let a=r(6649),n={USER:e=>`users:${e}`,USER_PROGRESS:(e,t,r)=>`progress:${e}:${t}:${r}`,DAILY_MISSIONS:(e,t)=>`missions:${e}:${t}`,WEEKLY_QUEST:(e,t)=>`weekly_quest:${e}:${t}`,STREAK_RECOVERY:e=>`streak_recovery:${e}`,DAILY_REFLECTION:(e,t)=>`reflection:${e}:${t}`},s=()=>new Date().toISOString().split("T")[0],o=()=>{let e=new Date;return new Date(e.getFullYear(),e.getMonth(),e.getDate()-e.getDay()).toISOString().split("T")[0]};async function i(e){try{return await a.kv.get(n.USER(e))}catch(e){return console.error("Error getting user:",e),null}}async function l({google_id:e,name:t,email:r,avatar:o}){try{let i=s(),l={id:e,google_id:e,name:t,email:r,avatar:o,total_xp:0,level:1,current_streak:1,max_streak:1,last_login:i,streak_shields:0,created_at:new Date().toISOString(),updated_at:new Date().toISOString()};return await a.kv.set(n.USER(e),l),l}catch(e){throw console.error("Error creating user:",e),e}}async function c(e){try{let t=await i(e);if(!t)return;let r=s(),o=t.current_streak||1,l=t.streak_shields||0;if(t.last_login){let a=new Date(t.last_login),n=new Date(r),s=Math.floor((n-a)/864e5);if(1===s)(o+=1)%7==0&&l<1&&(l+=1);else if(s>2){if(l>0)l-=1;else{let t=o;t>=7&&await _(e,t),o=1}}else if(2===s&&0===l){let t=o;t>=7&&await _(e,t),o=1}}let c={...t,last_login:r,current_streak:o,max_streak:Math.max(t.max_streak||1,o),streak_shields:l,updated_at:new Date().toISOString()};return await a.kv.set(n.USER(e),c),c}catch(e){throw console.error("Error updating user login:",e),e}}async function _(e,t){try{let r=new Date;r.setDate(r.getDate()+2);let s=new Date;s.setDate(s.getDate()-30);let o=await a.kv.get(n.STREAK_RECOVERY(e));if(o&&o.recovery_used&&new Date(o.created_at)>s)return;let i={user_id:e,broken_streak:t,recovery_deadline:r.toISOString().split("T")[0],recovery_missions_needed:5,recovery_missions_completed:0,recovery_used:!1,created_at:new Date().toISOString()};await a.kv.set(n.STREAK_RECOVERY(e),i)}catch(e){console.error("Error creating streak recovery:",e)}}async function u(e){try{let t=await i(e);if(!t)return{};return{completed_questions:(await a.kv.keys(`progress:${e}:*`)).length,total_xp:t.total_xp||0,current_streak:t.current_streak||0,max_streak:t.max_streak||0,streak_shields:t.streak_shields||0,level:t.level||1}}catch(e){return console.error("Error getting user stats:",e),{}}}async function d(e){try{let t=await a.kv.keys(`progress:${e}:*`),r=[];for(let e of t){let t=await a.kv.get(e);t&&r.push(t)}return r.sort((e,t)=>e.level_id!==t.level_id?e.level_id-t.level_id:e.question_id-t.question_id)}catch(e){return console.error("Error getting user progress:",e),[]}}async function p(e,t,r){try{let s=await i(e);if(!s)return{total_xp:0,level:1};if(t&&r>0){let t=(s.total_xp||0)+r,o=Math.floor(.1*Math.sqrt(t)+1),i={...s,total_xp:t,level:o,updated_at:new Date().toISOString()};return await a.kv.set(n.USER(e),i),{total_xp:t,level:o}}return{total_xp:s.total_xp||0,level:s.level||1}}catch(e){return console.error("Error updating user totals:",e),{total_xp:0,level:1}}}async function w(e,{level_id:t,question_id:r,completed:s,xp_earned:o,hints_used:i}){try{let l=n.USER_PROGRESS(e,t,r),c=await a.kv.get(l);if(c){let e={...c,completed:s,attempts:(c.attempts||0)+1,hints_used:(c.hints_used||0)+i,xp_earned:(c.xp_earned||0)+o,completed_at:s?new Date().toISOString():c.completed_at};await a.kv.set(l,e)}else{let n={user_id:e,level_id:t,question_id:r,completed:s,attempts:1,hints_used:i,xp_earned:o,completed_at:s?new Date().toISOString():null};await a.kv.set(l,n)}return p(e,s,o)}catch(e){throw console.error("Error upserting user progress:",e),e}}async function m(e){try{let t=o(),r=n.WEEKLY_QUEST(e,t),s=await a.kv.get(r);return s||(s={id:`${e}-${t}`,user_id:e,week_start:t,missions_target:12,missions_completed:0,completed:!1,reward_claimed:!1},await a.kv.set(r,s)),s}catch(e){return console.error("Error getting weekly quest:",e),null}}async function g(e){try{let t=o(),r=n.WEEKLY_QUEST(e,t),s=await a.kv.get(r);if(!s)return{reward:null};let l={...s,missions_completed:s.missions_completed+1,completed:s.missions_completed+1>=s.missions_target};await a.kv.set(r,l);let c=null;if(l.completed&&!l.reward_claimed){if("shield"==(.5>Math.random()?"shield":"xp")){let t=await i(e),r={...t,streak_shields:(t.streak_shields||0)+1,updated_at:new Date().toISOString()};await a.kv.set(n.USER(e),r),c="1 Streak Shield"}else{let t=await i(e),r=(t.total_xp||0)+200,s={...t,total_xp:r,level:Math.floor(.1*Math.sqrt(r)+1),updated_at:new Date().toISOString()};await a.kv.set(n.USER(e),s),c="200 XP"}l.reward_claimed=!0,await a.kv.set(r,l)}return{reward:c}}catch(e){return console.error("Error completing weekly quest:",e),{reward:null}}}async function v(e,t){try{let r=n.DAILY_MISSIONS(e,t),s=await a.kv.get(r);if(!s){let n=[];for(;n.length<3;)n.push({level_id:Math.floor(11*Math.random())+1,question_id:Math.floor(4*Math.random())+1});s={user_id:e,mission_date:t,question_1_id:`${n[0].level_id}-${n[0].question_id}`,question_2_id:`${n[1].level_id}-${n[1].question_id}`,question_3_id:`${n[2].level_id}-${n[2].question_id}`,completed_count:0},await a.kv.set(r,s)}return s}catch(e){return console.error("Error getting daily missions:",e),null}}async function E(e,t,r,s){try{let i=await v(e,s);if(!i)return{completed_count:0};let l=`${t}-${r}`,c=i.completed_count;if(i.question_1_id===l&&i.completed_count<1?c=1:i.question_2_id===l&&i.completed_count<2?c=2:i.question_3_id===l&&i.completed_count<3&&(c=3),c>i.completed_count){i.completed_count=c,await a.kv.set(n.DAILY_MISSIONS(e,s),i);let t=o(),r=n.WEEKLY_QUEST(e,t),l=await a.kv.get(r);l&&(l.missions_completed=l.missions_completed+1,l.completed=l.missions_completed>=l.missions_target,await a.kv.set(r,l))}return{completed_count:Math.max(c,i.completed_count)}}catch(e){return console.error("Error completing daily mission:",e),{completed_count:0}}}async function y(e){try{let t=await a.kv.get(n.STREAK_RECOVERY(e));if(!t)return null;let r=new Date(t.recovery_deadline),s=new Date;if(t.recovery_used||r<s)return null;return t}catch(e){return console.error("Error getting streak recovery:",e),null}}async function k(e){try{let t=await y(e);if(!t)return{completed:!1};if(t.recovery_missions_completed=t.recovery_missions_completed+1,await a.kv.set(n.STREAK_RECOVERY(e),t),t.recovery_missions_completed>=5){let r=Math.floor(t.broken_streak/2),s={...await i(e),current_streak:r,updated_at:new Date().toISOString()};return await a.kv.set(n.USER(e),s),t.recovery_used=!0,await a.kv.set(n.STREAK_RECOVERY(e),t),{completed:!0,restored_streak:r}}return{completed:!1}}catch(e){return console.error("Error completing streak recovery mission:",e),{completed:!1}}}async function S(e,t){try{return await a.kv.get(n.DAILY_REFLECTION(e,t))}catch(e){return console.error("Error getting daily reflection:",e),null}}async function f(e,t,r){try{let s={user_id:e,reflection_date:r,takeaway:t,created_at:new Date().toISOString()};await a.kv.set(n.DAILY_REFLECTION(e,r),s)}catch(e){throw console.error("Error saving daily reflection:",e),e}}async function h(e){try{let t=new Date,r=new Date(t.getTime()-6048e5).toISOString().split("T")[0],n=await a.kv.keys(`reflection:${e}:*`),s=[];for(let e of n){let t=await a.kv.get(e);t&&t.reflection_date>=r&&s.push(t)}return s.sort((e,t)=>new Date(t.reflection_date)-new Date(e.reflection_date))}catch(e){return console.error("Error getting weekly recap:",e),[]}}e.exports={getUserById:i,createUser:l,updateUserLogin:c,getUserStats:u,getUserProgress:d,upsertUserProgress:w,getWeeklyQuest:m,completeWeeklyQuest:g,getDailyMissions:v,completeDailyMission:E,getStreakRecovery:y,completeStreakRecoveryMission:k,getDailyReflection:S,saveDailyReflection:f,getWeeklyRecap:h}}};